# -*- coding: utf-8 -*-
"""
Created on Sun Nov 22 20:32:01 2020

@author: vmpsk
"""

import pygame 
import numpy as np
import math  
import sys
import collections

pygame.init()

screen = pygame.display.set_mode((600,600))
screen.fill((255,255,255), (0, 0, screen.get_width()// 1, screen.get_height()))

#Title and icon
pygame.display.set_caption("Hello world")
#icon = pygame.image.load('RedCircle.png')
#pygame.display.set_icon(icon)
font = pygame.font.Font('freesansbold.ttf', 20)

# Import image of the body in the game
circleImage = pygame.image.load('RedCircle.png')
r = np.array([80.0, 15.0]) # [x, y]
v = np.array([0.1, 0.0]) # [Vx, Vy]
a = np.array([0.0, 0.01])# [Ax, Ay]
dt = 10
dot = pygame.image.load('dot.png')
blank = pygame.image.load('blank.png')

def showHeight():
    height = font.render("h = " + str(round(r[1],2)) + "; v =" + str(round(v[1],2)), True, (0,0,0))
    screen.blit(height,(300,10))

def circleShow(r,shiftRegister):
    screen.blit(blank, (shiftRegister[0],shiftRegister[1]))
    screen.blit(circleImage, (r[0],r[1]))
#    screen.blit(dot, (x,y))

def showDot(r):
#    screen.blit(blank, (r[0],r[1]))
    screen.blit(dot, (r[0],r[1]))

running = True
action = False
itr = 0
shiftRegister = np.array([0,0])
#shiftRegister = r

def move():
    shiftRegister[0] = r[0]
    shiftRegister[1] = r[1]
    v[1] = v[1] + a[1]*dt
    r[1] = r[1] + v[1]*dt
    v[0] = v[0] + a[0]*dt
    r[0] = r[0] + v[0]*dt

# Game loop
while running:
    
    screen.fill((255,255,255), (0, 0, screen.get_width()// 1, screen.get_height()//6))
#    screen.fill((255,255,255)) # Fills the back ground of the screen with color
    # QUIT pygame application and windows
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            pygame.display.quit()
            pygame.quit()
#            sys.exit()
            exit()  ## not necessary as it restarts the console

        if not(action):
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_DOWN:
                    action = True
                    drop = True

    
    if action == True:
        move()

    if r[1] >= 520:
        v[1] = -0.8*v[1]
        v[0] = 0.8*v[0]
        r[1] = 520

    circleShow(r, shiftRegister) #(x,y)
#    showDot(r)
    showHeight()
    pygame.display.update()
#    print(v, r)
    pygame.time.delay(dt)
    print(shiftRegister-r)
    
