# -*- coding: utf-8 -*-
"""
Created on Sun Nov 22 20:32:01 2020

@author: vmpsk
"""

import pygame 
import numpy as np
import math  
import sys

pygame.init()

screen = pygame.display.set_mode((600,600))

#Title and icon
pygame.display.set_caption("Hello world")
#icon = pygame.image.load('RedCircle.png')
#pygame.display.set_icon(icon)
font = pygame.font.Font('freesansbold.ttf', 20)

# Import image of the body in the game
circleImage = pygame.image.load('RedCircle.png')
r = np.array([80.0, 15.0]) # [x, y]
v = np.array([0.1, 0.0]) # [Vx, Vy]
a = np.array([0.0, 0.01])# [Ax, Ay]
dt = 10

def showHeight():
    height = font.render("h = " + str(round(r[1],2)) + "; v =" + str(round(v[1],2)), True, (0,0,0))
    screen.blit(height,(300,10))

def circleShow(x,y):
    screen.blit(circleImage, (x,y))

running = True
drop = False
bounce = False
action = False

# Game loop
while running:
    screen.fill((255,255,255)) # Fills the back ground of the screen with color
    # QUIT pygame application and windows
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            pygame.display.quit()
            pygame.quit()
#            sys.exit()
            exit()  ## not necessary as it restarts the console
        
        if not(action):
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_DOWN:
                    action = True
                    drop = True

    if drop:
#        v[0] = math.sqrt((v[0])**2 + 2*a[0]*r[0])
#        v[1] = math.sqrt((v[1])**2 + 2*a[1]*r[1])
        v[1] = v[1] + a[1]*dt
        r[1] = r[1] + v[1]*dt
        r[0] = r[0] + v[0]*dt
        

    if bounce:
        v[1] = v[1] - a[1]*dt
        r[1] = r[1] - v[1]*dt
        r[0] = r[0] + v[0]*dt


    if r[1] >= 520 and drop == True:
        drop = False
        bounce = True
        v[1] = 0.8*v[1]
        v[0] = 0.98*v[0]
        r[1] = 520

    if v[1]<=0.001 and action == True:
        drop = True
        bounce = False

    circleShow(r[0], r[1]) #(x,y)
    showHeight()
    pygame.display.update()
    print(v, r)
    
    pygame.time.delay(dt)
